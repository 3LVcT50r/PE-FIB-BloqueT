abline(lm(time_quicksort ~ time_mergesort))
data = read.csv("data40-60.csv")
data = read.csv("data40-60.csv")
data = read.csv("data_40-60.csv")
time_mergesort = data$time_merge
time_quicksort = data$time_quick
desordre = data$inversiones
plot(desordre, time_mergesort)
plot(desordre, time_quicksort)
boxplot(time_mergesort, time_quicksort)
plot(time_mergesort, time_quicksort)
abline(lm(time_quicksort ~ time_mergesort))
resta <- time_mergesort-time_quicksort
plot(desordre,resta)
abline(h=0)
boxplot(resta)
qqnorm(resta)
qqline(resta)
data = read.csv("data2.csv")
time_mergesort = data$time_merge
time_quicksort = data$time_quick
desordre = data$inversiones
plot(desordre, time_mergesort)
plot(desordre, time_quicksort)
boxplot(time_mergesort, time_quicksort)
plot(time_mergesort, time_quicksort)
abline(lm(time_quicksort ~ time_mergesort))
resta <- time_mergesort-time_quicksort
plot(desordre,resta)
abline(h=0)
boxplot(resta)
qqnorm(resta)
qqline(resta)
resta <- time_quicksort - time_mergesort
plot(desordre,resta)
abline(h=0)
boxplot(resta)
qqnorm(resta)
qqline(resta)
data = read.csv("data_rand.csv")
time_mergesort = data$time_merge
time_quicksort = data$time_quick
desordre = data$inversiones
plot(desordre, time_mergesort)
plot(desordre, time_quicksort)
boxplot(time_mergesort, time_quicksort)
plot(time_mergesort, time_quicksort)
abline(lm(time_quicksort ~ time_mergesort))
resta <- time_quicksort - time_mergesort
plot(desordre,resta)
abline(h=0)
boxplot(resta)
qqnorm(resta)
qqline(resta)
data = read.csv("data_rand.csv")
time_mergesort = data$time_merge
time_quicksort = data$time_quick
desordre = data$inversiones
plot(desordre, time_mergesort)
plot(desordre, time_quicksort)
boxplot(time_mergesort, time_quicksort)
plot(time_mergesort, time_quicksort)
abline(lm(time_quicksort ~ time_mergesort))
resta <- time_quicksort - time_mergesort
plot(desordre,resta)
abline(h=0)
boxplot(resta)
qqnorm(resta)
qqline(resta)
qqnorm(desordre)
qqline(desordre)
time_mergesort = data$time_merge
time_quicksort = data$time_quick
desordre = data$inversiones
plot(desordre, time_mergesort)
plot(desordre, time_quicksort)
boxplot(time_mergesort, time_quicksort)
plot(time_mergesort, time_quicksort)
abline(lm(time_quicksort ~ time_mergesort))
resta <- time_mergesort - time_quicksort
plot(desordre,resta)
abline(h=0)
boxplot(resta)
qqnorm(resta)
qqline(resta)
qqnorm(desordre)
qqline(desordre)
data = read.csv("data_rand.csv")
time_mergesort = data$time_merge
time_quicksort = data$time_quick
desordre = data$inversiones
plot(desordre, time_mergesort)
plot(desordre, time_quicksort)
boxplot(time_mergesort, time_quicksort)
plot(time_mergesort, time_quicksort)
abline(lm(time_quicksort ~ time_mergesort))
resta <- time_mergesort - time_quicksort
plot(desordre,resta)
abline(h=0)
boxplot(resta)
qqnorm(resta)
qqline(resta)
qqnorm(desordre)
qqline(desordre)
data = read.csv("data_full.csv")
desordre = data$inversiones
qqnorm(desordre)
qqline(desordre)
des_full = data_full$inversiones
data_rand = read.csv("data_rand.csv")
data_full = read.csv("data_full.csv")
data_int = read.csv("data_40-60.csv")
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
plot(des_rand, resta_rand)
plot(des_int, resta_int)
abline(des_int~resta_int)
plot(des_int, resta_int)
abline(des_int~resta_int)
abline(resta_int~des_int)
plot(des_int, resta_int)
abline(resta_int~des_int)
lm(resta_rand~des_rand)
summary(lm(resta_rand~des_rand))
data_rand = read.csv("data_rand.csv")
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
qqnorm(resta_rand)
qqline(resta_rand)
plot(des_rand, tq_rand)
data_rand = read.csv("data_rand.csv")
plot(des_rand, tq_rand)
data_rand = read.csv("data_rand.csv")
plot(des_rand, tq_rand)
data_rand = read.csv("data_rand.csv")
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
plot(des_rand, tq_rand)
qqplot(resta_rand)
qqnorm(resta_rand)
qqline(resta_rand)
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
data_rand = read.csv("data_rand.csv")
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
qqnorm(resta_rand)
qqline(resta_rand)
data_rand = read.csv("data_rand.csv")
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
qqnorm(resta_rand)
qqline(resta_rand)
data_rand = read.csv("data_rand.csv")
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
qqnorm(resta_rand)
qqline(resta_rand)
data_full = read.csv("data_full.csv")
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
plot(des_full, tq_full)
plot(des_full, tm_full)
qqnorm(resta_full)
qqline(resta_full)
data_full = read.csv("data_full.csv")
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
plot(des_full, tq_full)
plot(des_full, tm_full)
qqnorm(resta_full)
qqline(resta_full)
data_int = read.csv("data_40-60.csv")
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
plot(des_int, tq_int)
plot(des_int, tm_int)
qqnorm(resta_int)
qqline(resta_int)
data_int = read.csv("data_40-60.csv")
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
plot(des_int, tq_int)
plot(des_int, tm_int)
qqnorm(resta_int)
qqline(resta_int)
data_int = read.csv("data_40-60.csv")
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
plot(des_int, tq_int)
plot(des_int, tm_int)
qqnorm(resta_int)
qqline(resta_int)
data_int = read.csv("data_40-60.csv")
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
plot(des_int, tq_int)
plot(des_int, tm_int)
qqnorm(resta_int)
qqline(resta_int)
data_int = read.csv("data_40-60.csv")
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
plot(des_int, tq_int)
plot(des_int, tm_int)
qqnorm(resta_int)
qqline(resta_int)
data_rand = read.csv("data_rand.csv") #FET
data_full = read.csv("data_full.csv") #FET
data_int = read.csv("data_40-60.csv") #FET
##################   TOTS ELS DESORDRES   ####################
##############################################################
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#############   DESORDRES EN UN INTERVAL   ###################
##############################################################
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
qqnorm(des_rand)
qqline(des_rand)
plot(des_full, resta_full)
abline(h = 0)
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
data_rand = read.csv("data_rand.csv") #FET
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
data_rand = read.csv("data_rand.csv") #FET
data_full = read.csv("data_full.csv") #FET
data_int = read.csv("data_40-60.csv") #FET
##################   TOTS ELS DESORDRES   ####################
##############################################################
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#############   DESORDRES EN UN INTERVAL   ###################
##############################################################
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
###################   GRAFIQUES   ############################
##############################################################
#Normal del desordre random
qqnorm(des_rand)
qqline(des_rand)
#Diferencia respecte tots els desordres
plot(des_full, resta_full)
abline(h = 0)
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
data_rand = read.csv("data_rand.csv") #FET
data_full = read.csv("data_full.csv") #FET
data_int = read.csv("data_40-60.csv") #FET
##################   TOTS ELS DESORDRES   ####################
##############################################################
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#############   DESORDRES EN UN INTERVAL   ###################
##############################################################
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
##################   TOTS ELS DESORDRES   ####################
##############################################################
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#############   DESORDRES EN UN INTERVAL   ###################
##############################################################
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
#Normal del desordre random
qqnorm(des_rand)
qqline(des_rand)
#Diferencia respecte tots els desordres
plot(des_full, resta_full)
abline(h = 0)
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
data_rand = read.csv("data_rand.csv") #FET
data_full = read.csv("data_full.csv") #FET
data_int = read.csv("data_40-60.csv") #FET
##################   TOTS ELS DESORDRES   ####################
##############################################################
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#############   DESORDRES EN UN INTERVAL   ###################
##############################################################
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
###################   GRAFIQUES   ############################
##############################################################
#Normal del desordre random
qqnorm(des_rand)
qqline(des_rand)
#Diferencia respecte tots els desordres
plot(des_full, resta_full)
abline(h = 0)
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
t.value(resta_rand, paried=T)
t.value(tm_rand, tq_rand, paried=T)
t.test(tm_rand, tq_rand, paried=T)
summary(lm(resta_rand~des_rand))
plot(tm_rand, tq_rand)
abline(lm(tq_rand~tm_rand))
plot(des_rand, resta_rand)
abline(lm(resta_rand~des_rand))
data_rand = read.csv("data_rand.csv") #FET
data_full = read.csv("data_full.csv") #FET
data_int = read.csv("data_40-60.csv") #FET
##################   TOTS ELS DESORDRES   ####################
##############################################################
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#############   DESORDRES EN UN INTERVAL   ###################
##############################################################
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
###################   GRAFIQUES   ############################
##############################################################
#Normal del desordre random
qqnorm(des_rand)
qqline(des_rand)
#Diferencia respecte tots els desordres
plot(des_full, resta_full)
abline(h = 0)
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
#Difernecia en funció del desordre amb recte
plot(des_rand, resta_rand)
abline(lm(resta_rand~des_rand))
#Boxplot de la diferencia
boxplot(resta_rand)
#QQNorm de la resta
qqnorm(resta_rand)
qqline(resta_rand)
#
t.test(tm_rand, tq_rand, paried=T)
#Info de l'estudi de la diferencia amb el desordre
summary(lm(resta_rand~des_rand))
#install.packages("PairedData")
#library(PairedData)
#p <- paired(tm_rand,tq_rand)
#plot(p,type='BA')
#qqline(resta)
data_rand = read.csv("data_rand.csv") #FET
data_full = read.csv("data_full.csv") #FET
data_int = read.csv("data_40-60.csv") #FET
##################   TOTS ELS DESORDRES   ####################
##############################################################
tm_full = data_full$time_merge
tq_full = data_full$time_quick
des_full = data_full$inversiones
resta_full <- tm_full-tq_full
##################   DESORDRES RANDOM   ######################
##############################################################
tm_rand = data_rand$time_merge
tq_rand = data_rand$time_quick
des_rand = data_rand$inversiones
resta_rand <- tm_rand-tq_rand
#############   DESORDRES EN UN INTERVAL   ###################
##############################################################
tm_int = data_int$time_merge
tq_int = data_int$time_quick
des_int = data_int$inversiones
resta_int <- tm_int-tq_int
###################   GRAFIQUES   ############################
##############################################################
#Normal del desordre random
qqnorm(des_rand)
qqline(des_rand)
#Diferencia respecte tots els desordres
plot(des_full, resta_full)
abline(h = 0)
#Temps respecte el desordre dels dos algoritmes
plot(des_rand, tq_rand)
plot(des_rand, tm_rand)
#Difernecia en funció del desordre amb recte
plot(des_rand, resta_rand)
abline(lm(resta_rand~des_rand))
#Boxplot de la diferencia
boxplot(resta_rand)
#QQNorm de la resta
qqnorm(resta_rand)
qqline(resta_rand)
#
t.test(tm_rand, tq_rand, paried=T)
#Info de l'estudi de la diferencia amb el desordre
summary(lm(resta_rand~des_rand))
#install.packages("PairedData")
#library(PairedData)
#p <- paired(tm_rand,tq_rand)
#plot(p,type='BA')
#qqline(resta)
mean(tm_rand)
mean(tq_rand)
mean(resta_rand)
sd(tm_rand)
sd(tq_rand)
sd(resta_rand)
